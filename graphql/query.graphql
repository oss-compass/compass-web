query status($label: String!) {
    analysisStatus(label: $label)
}

query search($keyword: String!, $level:String) {
    fuzzySearch(keyword: $keyword, level: $level){
        level
        label
    }
}

query latestMetrics($label: String!, $level:String){
    latestMetrics(level: $level, label: $label){
        activityScore
        activityScoreUpdatedAt
        codeQualityGuarantee
        codeQualityGuaranteeUpdatedAt
        communitySupportScore
        communitySupportScoreUpdatedAt
        label
        level
        organizationsActivity
        organizationsActivityUpdatedAt
    }
}

query overview {
    overview {
        projectsCount
        dimensionsCount
        metricsCount
        modelsCount
        trends {
            backend
            forksCount
            language
            name
            openIssuesCount
            path
            stargazersCount
            watchersCount
            metricActivity {
                activityScore
            }
        }
    }
}

query communityRepos( $label: String!, $page: Int,$per: Int) {
    communityOverview(label:$label, page: $page, per: $per){
        projectsCount
        trends {
            backend
            name
            path
            metricActivity {
                activityScore
                grimoireCreationDate
            }
        }
    }
}

query metric($label: String!, $level:String = "repo", $start: ISO8601DateTime, $end: ISO8601DateTime) {
    metricCodequality(label: $label,level: $level, beginDate: $start, endDate: $end) {
        activeC1PrCommentsContributorCount
        activeC1PrCreateContributorCount
        activeC2ContributorCount
        codeMergeRatio
        codeMergedCount
        codeQualityGuarantee
        codeReviewRatio
        codeReviewedCount
        commitFrequency
        commitFrequencyInside
        contributorCount
        gitPrLinkedRatio
        grimoireCreationDate
        isMaintained
        label
        level
        linesAddedFrequency
        linesRemovedFrequency
        locFrequency
        prCommitCount
        prCommitLinkedCount
        prCount
        prIssueLinkedCount
        prIssueLinkedRatio
    }
    metricCommunity(label: $label,level: $level, beginDate: $start, endDate: $end){
        bugIssueOpenTimeAvg
        bugIssueOpenTimeMid
        closedPrsCount
        codeReviewCount
        commentFrequency
        communitySupportScore
        grimoireCreationDate
        issueFirstReponseAvg
        issueFirstReponseMid
        issueOpenTimeAvg
        issueOpenTimeMid
        label
        level
        prOpenTimeAvg
        prOpenTimeMid
        updatedIssuesCount
    }
    metricActivity(label: $label,level: $level, beginDate: $start, endDate: $end){
        activeC1IssueCommentsContributorCount
        activeC1IssueCreateContributorCount
        activeC1PrCommentsContributorCount
        activeC1PrCreateContributorCount
        activeC2ContributorCount
        activityScore
        orgCount
        closedIssuesCount
        codeReviewCount
        commentFrequency
        commitFrequency
        contributorCount
        createdSince
        grimoireCreationDate
        label
        level
        recentReleasesCount
        updatedIssuesCount
        updatedSince
    }
    metricGroupActivity(label: $label,level: $level, beginDate: $start, endDate: $end){
        commitFrequency
        # commitFrequencyOrg
        # commitFrequencyOrgPercentage
        # commitFrequencyPercentage
        contributionLast
        contributorCount
        # contributorOrgCount
        grimoireCreationDate
        label
        level
        orgCount
        organizationsActivity
    }

    summaryActivity( beginDate: $start, endDate: $end){
        activeC1IssueCommentsContributorCount{ ...MetricStat}
        activeC1IssueCreateContributorCount{ ...MetricStat}
        activeC1PrCommentsContributorCount{ ...MetricStat}
        activeC1PrCreateContributorCount{ ...MetricStat}
        activeC2ContributorCount{ ...MetricStat}
        activityScore{ ...MetricStat}
        closedIssuesCount{ ...MetricStat}
        codeReviewCount{ ...MetricStat}
        commentFrequency{ ...MetricStat}
        commitFrequency{ ...MetricStat}
        contributorCount{ ...MetricStat}
        createdSince{ ...MetricStat}
        grimoireCreationDate
        orgCount{ ...MetricStat}
        recentReleasesCount{ ...MetricStat}
        updatedIssuesCount{ ...MetricStat}
        updatedSince{ ...MetricStat}
    }
    summaryCodequality( beginDate: $start, endDate: $end){
        activeC1PrCommentsContributorCount{ ...MetricStat}
        activeC1PrCreateContributorCount{ ...MetricStat}
        activeC2ContributorCount{ ...MetricStat}
        codeMergeRatio{ ...MetricStat}
        codeMergedCount{ ...MetricStat}
        codeQualityGuarantee{ ...MetricStat}
        codeReviewRatio{ ...MetricStat}
        codeReviewedCount{ ...MetricStat}
        commitFrequency{ ...MetricStat}
        commitFrequencyInside{ ...MetricStat}
        contributorCount{ ...MetricStat}
        gitPrLinkedRatio{ ...MetricStat}
        grimoireCreationDate
        isMaintained{ ...MetricStat}
        linesAddedFrequency{ ...MetricStat}
        linesRemovedFrequency{ ...MetricStat}
        locFrequency{ ...MetricStat}
        prCommitCount{ ...MetricStat}
        prCommitLinkedCount{ ...MetricStat}
        prCount{ ...MetricStat}
        prIssueLinkedCount{ ...MetricStat}
        prIssueLinkedRatio{ ...MetricStat}
    }
    summaryCommunity( beginDate: $start, endDate: $end){
        bugIssueOpenTimeAvg{ ...MetricStat}
        bugIssueOpenTimeMid{ ...MetricStat}
        closedPrsCount{ ...MetricStat}
        codeReviewCount{ ...MetricStat}
        commentFrequency{ ...MetricStat}
        communitySupportScore{ ...MetricStat}
        grimoireCreationDate
        issueFirstReponseAvg{ ...MetricStat}
        issueFirstReponseMid{ ...MetricStat}
        issueOpenTimeAvg{ ...MetricStat}
        issueOpenTimeMid{ ...MetricStat}
        prOpenTimeAvg{ ...MetricStat}
        prOpenTimeMid{ ...MetricStat}
        updatedIssuesCount{ ...MetricStat}
    }
    summaryGroupActivity( beginDate: $start, endDate: $end){
        commitFrequency{ ...MetricStat}
        contributionLast{ ...MetricStat}
        contributorCount{ ...MetricStat}
        grimoireCreationDate
        orgCount{ ...MetricStat}
        organizationsActivity{ ...MetricStat}
    }
}

fragment MetricStat on MetricStat {
    mean
    median
}
